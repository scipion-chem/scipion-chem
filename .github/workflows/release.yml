name: Generate release (Pypi, tag, & GitHub Release)
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        pip install setuptools wheel twine
        pip install -r requirements.txt
    
    - name: Get tag name
      id: variables
      env:
        FOLDER_WITH_VERSION: ${{ vars.FOLDER_WITH_VERSION }}
      run: |
        VERSION=$(python -c "import $FOLDER_WITH_VERSION; print('VERSION', 'v'+$FOLDER_WITH_VERSION.__version__)" | grep VERSION | sed "s/VERSION //g") || (echo "Could not import version, check that variables are correctly set!" && exit 1)
        echo "TAG_NAME=${VERSION#v}" >> $GITHUB_OUTPUT
        echo "TAG NAME (must not contain version prefix): ${VERSION#v}"
    
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist
        twine upload dist/* -c "${{ secrets.PYPI_COMMENT }}"
    
    - name: Generate tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ steps.variables.outputs.TAG_NAME }}
    
    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: ${{ steps.variables.outputs.TAG_NAME }}
